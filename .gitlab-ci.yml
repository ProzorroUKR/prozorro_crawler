stages:
  - test
  - build
  - deploy

test:
  image: python:3.7-slim
  stage: test
  tags:
    - kube
  script:
    - pip install -r requirements.txt
    - pip install pytest pytest-asyncio coverage coveralls
    - cd src
    - coverage run --omit=*tests*  --source=. -m pytest
    - coverage report
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'

build:
  image: docker:git
  stage: build
  dependencies:
    - test
  tags:
    - shell
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -f Dockerfile --pull -t $CI_REGISTRY_IMAGE:$CI_BUILD_REF .
    - docker tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
  only:
    - master
    - /^([A-Z]{2}\-[0-9]{4})|([A-Z]{2}\-[0-9]{3})|([A-Z]{2}\-[0-9]{2})$/
    - /^v(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)-rc(?:0|[1-9]\d*)$/

deploy:
  stage: deploy
  tags:
    - dev-docker-shell-01
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - cat $CRAWLER_DOCKER_COMPOSE
    - docker-compose -f $CRAWLER_DOCKER_COMPOSE up -d
  only:
    - master
    - /^([A-Z]{2}\-[0-9]{4})|([A-Z]{2}\-[0-9]{3})|([A-Z]{2}\-[0-9]{2})$/
    - /^v(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)-rc(?:0|[1-9]\d*)$/
